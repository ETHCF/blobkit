name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'

jobs:
  # Lint and format checks
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint TypeScript
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Lint documentation
        run: npm run docs:lint

  # Build all packages
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/*/dist/
            packages/*/build/
          retention-days: 1

  # Test SDK package
  test-sdk:
    name: Test SDK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build SDK
        run: npm run build --workspace=@blobkit/sdk

      - name: Test SDK
        run: npm run test --workspace=@blobkit/sdk

      - name: Test coverage
        run: npm run test:coverage --workspace=@blobkit/sdk

  # Test proxy server
  test-proxy:
    name: Test Proxy Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build dependencies
        run: npm run build --workspace=@blobkit/sdk

      - name: Build proxy server
        run: npm run build --workspace=@blobkit/proxy-server

      - name: Test proxy server
        run: npm run test --workspace=@blobkit/proxy-server

  # Test smart contracts
  test-contracts:
    name: Test Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install dependencies
        run: npm ci

      - name: Install Forge dependencies
        run: cd packages/contracts && forge install

      - name: Build contracts
        run: cd packages/contracts && forge build

      - name: Test contracts
        run: cd packages/contracts && forge test --gas-report

      - name: Contract coverage
        run: cd packages/contracts && forge coverage

  # Security checks
  security:
    name: Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Audit dependencies
        run: npm audit --audit-level=moderate

      - name: Check for vulnerabilities
        run: npx audit-ci --moderate

  # Package size and bundle analysis
  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Analyze bundle size
        run: |
          echo "## Bundle Sizes" >> $GITHUB_STEP_SUMMARY
          echo "| Package | Size | Gzipped |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|------|---------|" >> $GITHUB_STEP_SUMMARY
          for dist in packages/*/dist; do
            package=$(basename $(dirname $dist))
            if [ -d "$dist" ]; then
              size=$(du -sh $dist | cut -f1)
              gzipped=$(find $dist -name "*.js" -exec gzip -c {} \; | wc -c | numfmt --to=iec)
              echo "| $package | $size | $gzipped |" >> $GITHUB_STEP_SUMMARY
            fi
          done

  # Multi-platform compatibility
  compatibility:
    name: Compatibility
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['18', '20']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build SDK
        run: npm run build --workspace=@blobkit/sdk

      - name: Test SDK compatibility
        run: npm run test --workspace=@blobkit/sdk

  # Changesets release preparation
  changeset-check:
    name: Changeset Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for changesets
        run: |
          if [ -z "$(npx changeset status --output=changedPackages.json)" ]; then
            echo "No changesets found. If you've made changes to packages, please add a changeset:"
            echo "npm run changeset"
            exit 1
          fi

  # All checks must pass
  ci-complete:
    name: CI Complete
    runs-on: ubuntu-latest
    needs: [lint, build, test-sdk, test-proxy, test-contracts, security, compatibility]
    if: always()
    steps:
      - name: Check all jobs succeeded
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1

      - name: Success
        run: echo "All CI checks passed! ðŸŽ‰" 